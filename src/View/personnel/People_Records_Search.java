/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.personnel;

import DAO.PeopleDAO;
import DAOFileImp.FilePeopleDAO;
import java.util.UUID;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
import model.People;
import utils.Util;

/**
 *
 * @author Mohin Paramasivam
 */
public class People_Records_Search extends javax.swing.JFrame {
    DefaultTableModel dm;
    JFrame jFrame_popup = new JFrame();
    String people_ic;
    String people_name;
    String people_password;
    String people_citizenship;
    PeopleDAO peopleDao;
     
            
    /**
     * Creates new form Search_People_Records
     */
    public People_Records_Search() {
        peopleDao = FilePeopleDAO.getInstance();
        initComponents();
        CreateColumns();
        initPeopleTable();
    }
    
     private void CreateColumns(){
         //GET TABLE MODEL
         dm = (DefaultTableModel) tblPeople.getModel();
         //ADD COLUMNS
         dm.addColumn("UserId");
         dm.addColumn("Name");
         dm.addColumn("IC/Passport");
         dm.addColumn("Gender");
         dm.addColumn("Citizenship");
         dm.addColumn("Country");
         dm.addColumn("Vaccination Status");
         dm.addColumn("Registration Status");
         TableColumnModel tcm = tblPeople.getColumnModel();
         tcm.removeColumn(tcm.getColumn(0)); //hide key
    }

     
     //ADD ROWS DATA
     
    private void populatePeople(People people) {
        String[] rowData = {people.getKey().toString(),
            people.getName(),
            people.getPeopleId(),
            people.getGender().toString(),
            people.getPeopleType().toString(),
            people.getCountry(),
            people.getVaccinationStatus().toString(),
            people.getRegistrationStatus().toString()
        };
         dm.addRow(rowData);
     }
     
     //Reference : https://www.youtube.com/watch?v=Uq4v-bIDAIk
     
      private void filter(String query){
          TableRowSorter<DefaultTableModel> tr=new TableRowSorter<DefaultTableModel>(dm);
          tblPeople.setRowSorter(tr);
          tr.setRowFilter(RowFilter.regexFilter("(?i)" + query));
      }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblPeople = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        txtSearchBox = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        btnModify = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblPeople.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblPeople.setAutoCreateRowSorter(true);
        tblPeople.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ){
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        }
    );
    tblPeople.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    //tblPeople.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    tblPeople.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        public void valueChanged(ListSelectionEvent event) {
            if(tblPeople.getSelectedRowCount() != 0 ) {
                btnModify.setEnabled(true);
                btnDelete.setEnabled(true);
            }else {
                btnDelete.setEnabled(false);
                btnModify.setEnabled(false);
            }
        }
    });
    jScrollPane2.setViewportView(tblPeople);

    lblTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    lblTitle.setText("People Details");

    txtSearchBox.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            txtSearchBoxKeyReleased(evt);
        }
    });

    lblSearch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    lblSearch.setText("Search : ");

    btnModify.setText("Modify");
    btnModify.setEnabled(false);
    btnModify.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnModifyActionPerformed(evt);
        }
    });

    btnBack.setText("Back to Main Page");
    btnBack.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnBackActionPerformed(evt);
        }
    });

    btnDelete.setText("Delete");
    btnDelete.setEnabled(false);
    btnDelete.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnDeleteActionPerformed(evt);
        }
    });

    btnRefresh.setText("refresh");
    btnRefresh.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRefreshActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addGap(423, 423, 423)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 324, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSearch)
                    .addGap(35, 35, 35)
                    .addComponent(txtSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(51, 51, 51)
                    .addComponent(btnRefresh))
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 87, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnBack)
                            .addGap(204, 204, 204)
                            .addComponent(btnDelete)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModify)))))
            .addGap(80, 80, 80))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(41, Short.MAX_VALUE)
            .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(29, 29, 29)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblSearch)
                .addComponent(btnRefresh))
            .addGap(18, 18, 18)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnModify, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(21, 21, 21))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchBoxKeyReleased
        // TODO add your handling code here:
        String query = txtSearchBox.getText();
        filter(query);
    }//GEN-LAST:event_txtSearchBoxKeyReleased

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
//        String bookingID = tableBookings.getModel().getValueAt(tableBookings.getSelectedRow(),0).toString();
//					ModifyBooking dialog = new ModifyBooking(self, true, bookingHandler.getBooking(bookingID));
        String userKey = tblPeople.getModel().getValueAt(tblPeople.getSelectedRow(), 0).toString();
        People_Record_Modify hframe = new People_Record_Modify(peopleDao.get(UUID.fromString(userKey)));
        hframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        People_Records_Main hframe = new People_Records_Main();
         hframe.setLocationRelativeTo(this);
        hframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String userKey = tblPeople.getModel().getValueAt(tblPeople.getSelectedRow(), 0).toString();
        peopleDao.delete(UUID.fromString(userKey));
        JOptionPane.showMessageDialog(null, "Deleted successfully!");
        initPeopleTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        initPeopleTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(People_Records_Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(People_Records_Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(People_Records_Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(People_Records_Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new People_Records_Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblPeople;
    private javax.swing.JTextField txtSearchBox;
    // End of variables declaration//GEN-END:variables

    private void initPeopleTable() {
        DefaultTableModel model = (DefaultTableModel) tblPeople.getModel();
        Util.emptyTableModel(model);
        for (People people : peopleDao.all()) {
            populatePeople(people);
        }
        btnDelete.setEnabled(false);
        btnModify.setEnabled(false);
    }

}
