/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.personnel;

import DAO.CentreDAO;
import DAO.PeopleDAO;
import DAO.VaccineDAO;
import DAO.VaccineSupplyDAO;
import DAOFileImp.FileCentreDAO;
import DAOFileImp.FilePeopleDAO;
import DAOFileImp.FileVaccineDAO;
import DAOFileImp.FileVaccineSupplyDAO;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
import model.Centre;
import model.People;
import model.VaccineSupply;
import utils.Util;

/**
 *
 * @author Mohin Paramasivam
 */
public class VaccineSupply_View extends javax.swing.JFrame {
    DefaultTableModel dm;
    JFrame jFrame_popup = new JFrame();
    String people_ic;
    String people_name;
    String people_password;
    String people_citizenship;
    PeopleDAO peopleDao = FilePeopleDAO.getInstance();
    VaccineSupplyDAO vsDao = FileVaccineSupplyDAO.getInstance();
    VaccineDAO vDao = FileVaccineDAO.getInstance();
    CentreDAO centreDao = FileCentreDAO.getInstance();

            
    /**
     * Creates new form Search_People_Records
     */
    public VaccineSupply_View() {
        initComponents();
        CreateColumns();
        initComboBoxes();
        initVaccineSupplyTable();
    }
    
     private void CreateColumns(){
         //GET TABLE MODEL
         dm = (DefaultTableModel) tblVaccineSupply.getModel();
         //ADD COLUMNS
         dm.addColumn("Key");
         dm.addColumn("Batch No.");
         dm.addColumn("Supply date");
         dm.addColumn("Vaccine");
         dm.addColumn("Supplier");
         dm.addColumn("Supply Quantity");
         dm.addColumn("Available Quantity");
         dm.addColumn("Accessible People Type");
         TableColumnModel tcm = tblVaccineSupply.getColumnModel();
         tcm.removeColumn(tcm.getColumn(0)); //hide key
    }

     
     //ADD ROWS DATA
     
    private void populateVaccineSupply(VaccineSupply vs) {
        StringBuilder accessiblePeopleTypes = new StringBuilder();
        for (People.PeopleType accesiblePeopleType : vs.getAccesiblePeopleTypes()) {
            accessiblePeopleTypes.append(accesiblePeopleType);
            accessiblePeopleTypes.append(", ");
        }
        accessiblePeopleTypes.deleteCharAt(accessiblePeopleTypes.length() - 1);
        accessiblePeopleTypes.deleteCharAt(accessiblePeopleTypes.length() - 1);
        String[] rowData = {
            vs.getKey().toString(),
            vs.getBatchNo(),
            vs.getSupplyDate().toString(),
            vs.getVaccine().getName(),
            vs.getSupplier(),
            Integer.toString(vs.getSupplyQuantity()),
            Integer.toString(vs.getAvailableQuantity()),
            accessiblePeopleTypes.toString()
        };
         dm.addRow(rowData);
     }
     
     //Reference : https://www.youtube.com/watch?v=Uq4v-bIDAIk
     
      private void filter(String query){
          TableRowSorter<DefaultTableModel> tr=new TableRowSorter<DefaultTableModel>(dm);
          tblVaccineSupply.setRowSorter(tr);
          tr.setRowFilter(RowFilter.regexFilter("(?i)" + query));
      }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblVaccineSupply = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        txtSearchBox = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        btnModify = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblCentre = new javax.swing.JLabel();
        cbbCentre = new javax.swing.JComboBox<>();
        btnRefresh1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblVaccineSupply.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblVaccineSupply.setAutoCreateRowSorter(true);
        tblVaccineSupply.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ){
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        }
    );
    tblVaccineSupply.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    //tblPeople.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    tblVaccineSupply.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        public void valueChanged(ListSelectionEvent event) {
            if(tblVaccineSupply.getSelectedRowCount() != 0 ) {
                btnModify.setEnabled(true);
                btnDelete.setEnabled(true);
            }else {
                btnDelete.setEnabled(false);
                btnModify.setEnabled(false);
            }
        }
    });
    jScrollPane2.setViewportView(tblVaccineSupply);

    lblTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    lblTitle.setText("Vaccine Supply");

    txtSearchBox.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            txtSearchBoxKeyReleased(evt);
        }
    });

    lblSearch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    lblSearch.setText("Search : ");

    btnModify.setText("Modify");
    btnModify.setEnabled(false);
    btnModify.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnModifyActionPerformed(evt);
        }
    });

    btnBack.setText("Back to Main Page");
    btnBack.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnBackActionPerformed(evt);
        }
    });

    btnDelete.setText("Delete");
    btnDelete.setEnabled(false);
    btnDelete.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnDeleteActionPerformed(evt);
        }
    });

    lblCentre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    lblCentre.setText("Centre: ");

    cbbCentre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    cbbCentre.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cbbCentreActionPerformed(evt);
        }
    });

    btnRefresh1.setText("refresh");
    btnRefresh1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRefresh1ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(406, 406, 406))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblSearch)
                        .addComponent(lblCentre))
                    .addGap(35, 35, 35)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtSearchBox)
                        .addComponent(cbbCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(60, 60, 60)
                    .addComponent(btnRefresh1))
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 87, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnBack)
                            .addGap(204, 204, 204)
                            .addComponent(btnDelete)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModify)))))
            .addGap(80, 80, 80))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(20, 20, 20)
            .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRefresh1)
                    .addGap(18, 18, 18))
                .addGroup(layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCentre)
                        .addComponent(cbbCentre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSearch))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnModify, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(45, 45, 45))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchBoxKeyReleased
        // TODO add your handling code here:
        String query = txtSearchBox.getText();
        filter(query);
    }//GEN-LAST:event_txtSearchBoxKeyReleased

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
//        String bookingID = tableBookings.getModel().getValueAt(tableBookings.getSelectedRow(),0).toString();
//					ModifyBooking dialog = new ModifyBooking(self, true, bookingHandler.getBooking(bookingID));
        String userKey = tblVaccineSupply.getModel().getValueAt(tblVaccineSupply.getSelectedRow(), 0).toString();
        VaccineSupply_Modify hframe = new VaccineSupply_Modify(vsDao.get(UUID.fromString(userKey)));
        hframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
// TODO add your handling code here:
        VaccineSupply_Main hframe = new VaccineSupply_Main();
         hframe.setLocationRelativeTo(this);
        hframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String key = tblVaccineSupply.getModel().getValueAt(tblVaccineSupply.getSelectedRow(), 0).toString();
        if (vsDao.canDeleteVaccineSupply(UUID.fromString(key))) {
            vsDao.delete(UUID.fromString(key));
            JOptionPane.showMessageDialog(null, "Deleted successfully!");
            initVaccineSupplyTable();
        }else{
         JOptionPane.showMessageDialog(null, "Cannot delete this supply because people took vaccine from this supply!");
            initVaccineSupplyTable();
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void cbbCentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbCentreActionPerformed
        // TODO add your handling code here:
        initVaccineSupplyTable();
    }//GEN-LAST:event_cbbCentreActionPerformed

    private void btnRefresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefresh1ActionPerformed
        // TODO add your handling code here:
        initVaccineSupplyTable();
    }//GEN-LAST:event_btnRefresh1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VaccineSupply_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VaccineSupply_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VaccineSupply_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VaccineSupply_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VaccineSupply_View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRefresh1;
    private javax.swing.JComboBox<String> cbbCentre;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCentre;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblVaccineSupply;
    private javax.swing.JTextField txtSearchBox;
    // End of variables declaration//GEN-END:variables

    private void initVaccineSupplyTable() {
        DefaultTableModel model = (DefaultTableModel) tblVaccineSupply.getModel();
        Centre selectedCentre = centreDao.all().get(cbbCentre.getSelectedIndex());
        Util.emptyTableModel(model);
        for (VaccineSupply vs : vsDao.findVaccineSupplyByCentre(selectedCentre.getKey())) {
            populateVaccineSupply(vs);
        }
        btnDelete.setEnabled(false);
        btnModify.setEnabled(false);
    }

    private void initComboBoxes() {
        List<Centre> centres = centreDao.all();
        List<String> centresName = new ArrayList<>();

        for (Centre centre : centres) {
            centresName.add(centre.getName() + " | " + centre.getOpenTime().toString() + "-" + centre.getCloseTime().toString());
        }

        cbbCentre.setModel(new DefaultComboBoxModel(centresName.toArray()));
        cbbCentre.setSelectedIndex(0);

    }

}
